@charset "UTF-8";

/* =============================================================================
   #Setting
   ========================================================================== */
/**
 * SettingレイヤーではCustom Propertiesを使ったグローバル変数を定義します。
 * Sassでは`$`変数で定義します。
 * 例えば、サイトのmax-widthやフォントのサイズ、余白や色に関するものです。
 * Custom Propertiesもカスケーディングの対象となるため、定数のように扱います。
 * 非対応ブラウザがある場合、変数はコード内に変換され、コメントのみが残ります。
 */
@import "globalCSS/_setting.css";

/* =============================================================================
   #Tool
   ========================================================================== */
/**
 * ToolレイヤーではCustom SelectorsやCustom Media Queries、@apply Ruleを使った汎用的なルールを定義します。
 * Sassでは@functionや@mixinで定義します。
 * 非対応ブラウザがある場合、ルールはコード内に変換され、コメントのみが残ります。
 */
@import "globalCSS/_tool.css";

/* =============================================================================
   #Base
   ========================================================================== */
/**
 * Baseレイヤーでは要素セレクタや属性セレクタのようなオブジェクトのベースとなるスタイルを定義します。
 * Normalize.cssもこのレイヤーに含まれます。
 * 詳細度はクラスセレクタと同じ0,0,1,0以下になるように極力低くします。
 * メディアクエリや擬似クラスのような、ある状況や状態に対するスタイルは極力持つべきではありません。
 * オブジェクト間の余白を管理しやすくするために、上下方向の`margin`は`0`にリセットしておくのを推奨します。
 * ただし、過度なリセットは禁止します。
 * 継承を利用するために、ルート要素の`font-size`はパーセンテージで指定（`62.5%`の指定は禁止）、
 * その他の要素やオブジェクトのサイズは`rem`と`em`で指定します。
 */
@import "../../../node_modules/normalize.css/normalize.css";
@import "globalCSS/_base.css";

/* =============================================================================
   #Namespace
   ========================================================================== */
/**
 * 名前空間ごとにディレクトリをわけます。
 * globパターンで読み込まれるので、切り離しても動作するようにする必要があります。
 *
 * `.st-`(Structure)...ヘッダーやフッターのようなサイト共通のモジュール。
 * `.sw-`(SiteWide)...サイト共通のコンポーネント
 * `.tp-(`TopPage)...サイトトップページ。
 * `.rd-`(ReportDetail)...レポート詳細ページ。
 */
@import "../namespace/**/*.css";
